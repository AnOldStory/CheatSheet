{"version":3,"sources":["store/modules/route.js","store/modules/index.js","store/index.js","store/configure.js","container/navigation/NavigationContainer.js","component/MainLink.js","container/main/MainContainer.js","container/sidebar/SidebarContainer.js","component/Top.js","component/CodeViewer.js","component/CodeName.js","component/CodeText.js","component/CodeLink.js","component/Loading.js","container/presenter/PresenterContainer.js","route/Router.js","Root.js","serviceWorker.js","index.js"],"names":["set","createAction","value","initialState","Map","path","handleActions","Object","defineProperty","state","action","payload","combineReducers","route","configure","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","modules","NavigationContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMain","bind","assertThisInitialized","history","replace","react_default","a","createElement","className","id","onClick","Component","MainLink","handleSet","event","RouteActions","Link","to","language","connect","dispatch","bindActionCreators","routeActions","MainContainer","languageList","map","lang","i","component_MainLink","key","SidebarContainer","Scrollspy_default","items","title","currentClassName","componentTag","text","href","Top","Counter","_ref","type","code","lib","component","name","Loading","PresenterContainer","loaded","contents","_this2","match","params","fetch","process","then","res","temp","parser","sidebarparser","split","length","trim","push","CodeName","CodeViewer","CodeText","CodeLink","console","log","setState","catch","err","Fragment","component_Loading","container_sidebar_SidebarContainer","component_Top","get","App","BrowserRouter","basename","Route","exact","container_main_MainContainer","Switch","Root","es","store","Router","Boolean","location","hostname","ReactDOM","render","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52a72329.chunk.js","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport { Map } from \"immutable\";\r\n\r\nconst SET = \"route/SET\";\r\n\r\nexport const set = createAction(SET, value => value);\r\n\r\nconst initialState = Map({\r\n  path: \"Regexp\"\r\n});\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET]: (state, action) => {\r\n      return state.set(\"path\", action.payload);\r\n    }\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport route from \"./route\";\r\n\r\nexport default combineReducers({\r\n  route\r\n});\r\n","import configure from \"./configure\";\r\nexport default configure();\r\n","import { createStore } from \"redux\";\r\nimport modules from \"./modules\";\r\n\r\nconst configure = () => {\r\n  // const store = createStore(modules);\r\n  const devTools =\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__();\r\n  const store = createStore(modules, devTools);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configure;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./NavigationContainer.scss\";\r\n\r\nclass NavigationContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMain = this.handleMain.bind(this);\r\n  }\r\n  handleMain() {\r\n    this.props.history.replace(\"/\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\" id=\"Top\">\r\n        <div className=\"navigation-brand\" onClick={this.handleMain}>\r\n          <strong>Cheat Sheet</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as routeActions from \"store/modules/route\";\r\n\r\nclass MainLink extends Component {\r\n  handleSet = (path, event) => {\r\n    const { RouteActions } = this.props;\r\n    RouteActions.set(path);\r\n  };\r\n  render() {\r\n    return (\r\n      <Link\r\n        className=\"main-link\"\r\n        to={this.props.language}\r\n        onClick={this.handleSet.bind(this, this.props.language)}\r\n      >\r\n        <div className=\"main-link-span\">{this.props.language}</div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  null,\r\n  dispatch => ({\r\n    RouteActions: bindActionCreators(routeActions, dispatch)\r\n  })\r\n)(MainLink);\r\n","import React, { Component } from \"react\";\r\n\r\nimport MainLink from \"component/MainLink\";\r\n\r\nimport \"./MainContainer.scss\";\r\n\r\nclass MainContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"main-box\">\r\n          {this.props.languageList.map((lang, i) => {\r\n            return <MainLink language={lang} key={i} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React, { Component } from \"react\";\r\nimport Scrollspy from \"react-scrollspy\";\r\n\r\nimport \"./SidebarContainer.scss\";\r\n\r\nclass SidebarContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Scrollspy\r\n        className=\"sidebar\"\r\n        items={this.props.title}\r\n        currentClassName=\"sidebar-li-active\"\r\n        componentTag={\"div\"}\r\n      >\r\n        {this.props.title.map((text, i) => {\r\n          return (\r\n            <li className=\"sidebar-li\" key={i}>\r\n              <a href={\"#\" + text}>{text}</a>\r\n            </li>\r\n          );\r\n        })}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarContainer;\r\n","import React from \"react\";\r\n\r\nconst Top = () => {\r\n  return (\r\n    <div className=\"presenter-link presenter-top\">\r\n      <a href=\"#Top\">↑</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import React from \"react\";\r\nimport { PrismCode } from \"react-prism\";\r\n\r\nconst Counter = ({ type, code }) => {\r\n  return (\r\n    <div className=\"presenter-code\">\r\n      <PrismCode component=\"pre\" className={\"language-\" + type}>\r\n        {code}\r\n      </PrismCode>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nconst Counter = ({ name, id }) => {\r\n  return (\r\n    <div className=\"presenter-name\" id={id}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nconst Counter = ({ text }) => {\r\n  return <div className=\"presenter-text\">{text}</div>;\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nconst Counter = ({ name, href, id }) => {\r\n  return (\r\n    <div className=\"presenter-link\">\r\n      <a href={href} id={id}>\r\n        {name}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return <div className=\"loading\" />;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as routeActions from \"store/modules/route\";\r\n\r\nimport SidebarContainer from \"container/sidebar/SidebarContainer\";\r\n\r\nimport Top from \"component/Top\";\r\nimport CodeViewer from \"component/CodeViewer\";\r\nimport CodeName from \"component/CodeName\";\r\nimport CodeText from \"component/CodeText\";\r\nimport CodeLink from \"component/CodeLink\";\r\n\r\nimport Loading from \"component/Loading\";\r\n\r\nimport \"./PresenterContainer.scss\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass PresenterContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: 0,\r\n      contents: [],\r\n      title: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.path !== this.props.match.params.lang) {\r\n      const { RouteActions } = this.props;\r\n      RouteActions.set(this.props.match.params.lang);\r\n    }\r\n    fetch(\r\n      process.env.PUBLIC_URL + \"/docs/\" + this.props.match.params.lang + \".ep\"\r\n    )\r\n      .then(res => {\r\n        return res.text();\r\n      })\r\n      .then(text => {\r\n        let parser = [];\r\n        let sidebarparser = [];\r\n        let type, temp;\r\n\r\n        /* parse start */\r\n        text = text\r\n          .replace(/-=\\[/gi, \"title^^^\")\r\n          .replace(/\\]=-/gi, \"^^^\")\r\n          .replace(/--\\[/gi, \"code^^^\")\r\n          .replace(/\\]--/gi, \"~~~\")\r\n          .replace(/----/gi, \"^^^\")\r\n          .replace(/=-\\[/gi, \"text^^^\")\r\n          .replace(/]-=/gi, \"^^^\")\r\n          .replace(/-=>/gi, \"link^^^\")\r\n          .replace(/<=-/gi, \"~~~\")\r\n          .replace(/-><-/gi, \"^^^\")\r\n          .split(\"^^^\");\r\n\r\n        for (let i = 0; i < text.length; i++) {\r\n          if (i % 2 === 0) {\r\n            type = text[i].trim();\r\n          } else {\r\n            switch (type) {\r\n              case \"title\":\r\n                parser.push(\r\n                  <CodeName\r\n                    name={text[i].trim()}\r\n                    key={i / 2}\r\n                    id={text[i].trim()}\r\n                  />\r\n                );\r\n                sidebarparser.push(text[i].trim());\r\n                break;\r\n              case \"code\":\r\n                temp = text[i].split(\"~~~\");\r\n                parser.push(\r\n                  <CodeViewer\r\n                    type={temp[0].trim()}\r\n                    code={temp[1].trim()}\r\n                    key={i / 2}\r\n                  />\r\n                );\r\n                break;\r\n              case \"text\":\r\n                parser.push(<CodeText text={text[i].trim()} key={i / 2} />);\r\n                break;\r\n              case \"link\":\r\n                temp = text[i].split(\"~~~\");\r\n                parser.push(\r\n                  <CodeLink\r\n                    name={temp[0].trim()}\r\n                    href={temp[1].trim()}\r\n                    key={i / 2}\r\n                  />\r\n                );\r\n                break;\r\n              default:\r\n                console.log(type);\r\n                console.log(text[i]);\r\n                parser.push(<CodeText text={\"parse Error!\"} key={i / 2} />);\r\n            }\r\n          }\r\n        }\r\n\r\n        /* parse end */\r\n        this.setState({\r\n          loaded: 1,\r\n          contents: parser,\r\n          title: sidebarparser\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loaded === 0 ? (\r\n          <Loading />\r\n        ) : (\r\n          <SidebarContainer title={this.state.title} />\r\n        )}\r\n        <div className=\"presenter\">\r\n          <div className=\"presenter-box\">\r\n            <div className=\"presenter-brand\">{this.props.path}</div>\r\n            {this.state.contents.map(lang => {\r\n              return lang;\r\n            })}\r\n          </div>\r\n        </div>\r\n        <Top />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  value => ({\r\n    path: value.route.get(\"path\")\r\n  }),\r\n  dispatch => ({\r\n    RouteActions: bindActionCreators(routeActions, dispatch)\r\n  })\r\n)(PresenterContainer);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport NavigationContainer from \"container/navigation/NavigationContainer\";\r\nimport MainContainer from \"container/main/MainContainer\";\r\nimport PresenterContainer from \"container/presenter/PresenterContainer\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      languageList: [\r\n        \"Algorithm\",\r\n        \"C\",\r\n        \"C++\",\r\n        \"CSS\",\r\n        \"Java\",\r\n        \"Linux\",\r\n        \"Machine Learning\",\r\n        \"Markdown\",\r\n        \"Node.js\",\r\n        \"OCaml\",\r\n        \"Python\",\r\n        \"React\",\r\n        \"Regexp\"\r\n      ]\r\n    };\r\n    // ABCDE FGHIJ KLMNO PQRST UVWXY Z\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename=\"/CheatSheet\">\r\n        <>\r\n          <Route path=\"/\" component={NavigationContainer} />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={() => (\r\n              <MainContainer languageList={this.state.languageList} />\r\n            )}\r\n          />\r\n\r\n          <Switch>\r\n            <Route path=\"/:lang\" component={PresenterContainer} />\r\n          </Switch>\r\n        </>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Router from \"./route/Router\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport Root from \"./Root\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}